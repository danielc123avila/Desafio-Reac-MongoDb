# 🛍️ proyecto de Gestión de Precios Especiales

# 🛍️ Backend de Gestión de Precios Especiales

![Node.js](https://img.shields.io/badge/Node.js-18.x-green)
![MongoDB](https://img.shields.io/badge/MongoDB-6.x-success)
![Express](https://img.shields.io/badge/Express-4.x-blue)

## 📋 Tabla de Contenidos
- [Descripción del Proyecto] #(-descripción-del-proyecto)
- [Stack Tecnológico]#(-stack-tecnológico)
- [Configuración Inicial]#(-configuración-inicial)
- [Endpoints Principales]#(-endpoints-principales)
- [Variables de Entorno]#(-variables-de-entorno)
- [Ejemplos de Uso]#(-ejemplos-de-uso)
- [Consideraciones Técnicas]#(%EF%B8%8F-consideraciones-técnicas)

---

## 🚀 Descripción del Proyecto
Sistema backend para administración de precios especiales por usuario/producto con:
- 📈 Gestión de precios con historial de cambios
- 📦 CRUD completo de productos y usuarios
- 🕒 Vigencia personalizada de ofertas

---

## 🛠️ Stack Tecnológico
| Tecnología       | Versión   | Uso Principal             |
|------------------|-----------|---------------------------|
| Node.js          | 18.x      | Entorno de ejecución      |
| Express          | 4.21.2    | Framework web             |
| MongoDB          | 6.10.2    | Base de datos NoSQL       |
| Mongoose         | 8.10.1    | ODM para MongoDB          |
| JWT              | 9.0.2     | Autenticación por tokens  |
| Bcrypt           | 5.1.1     | Encriptación contraseñas  |

---

## ⚙️ Configuración Inicial
1. **Requisitos previos**
   ```bash
   Node.js v18+
   MongoDB 6.x

2.Instalacion 
git clone: 
cd proyecto-precios-especiales
npm install
cp .env.example .env

3. **Configuración de Variables de Entorno**
PORT=3000
MONGO_URI=mongodb://localhost:27017/desafio-Reac-MongoDb
JWT_SECRET=mi_secreto_super_seguro
JWT_EXPIRES=2h

4.ejecucion

npm run dev

## 🌐 Endpoints Principales

## 🔑 Autenticación

| metodo       |         ruta        |          Descripción           |
|--------------|---------------------|--------------------------------|
| GET          | /api/login         | Obtener token JWT               |
| POST         | /api/registro      | Registrar nuevo usuario         |

## 📦 Productos
| metodo       |         ruta        |          Descripción           |
|--------------|---------------------|--------------------------------|
| GET          | /api/productos      | Listar todos los productos     |
| POST         | /api/productos      | Crear nuevo producto           |


## 💰 Precios Especiales
| metodo       |         ruta        |          Descripción           |
|--------------|---------------------|--------------------------------|
| GET          | /api/asignar        | Asignar precio especial        |
| POST         | /api/precios        | Listar precios asignados       |

# 📝 Ejemplos de Uso

# 1. Login de usuario
POST /api/login
Content-Type: application/json

{
  "email": "usuario@ejemplo.com",
  "password": "contraseñaSegura123"
}

# Respuesta Exitosa:
{
  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
}

# 2. asignar precio especial

POST /api/asignar
Authorization: Bearer [token]
Content-Type: application/json

{
  "usuarioId": "65c1a8f4b4d9e001d8e7b4a1",
  "productoId": "65c1a934b4d9e001d8e7b4a3",
  "precio": 149.99
}

# ⚠️ Consideraciones Técnicas

¿Por qué JavaScript y no TypeScript?
- Rápida implementación: Menos configuración inicial
- Flexibilidad: Tipado dinámico para prototipado ágil
- Recursos disponibles: Mayor cantidad de ejemplos y librerías
- Equipo familiarizado: Menor curva de aprendizaje

# Recomendación para escalar:

Para proyectos grandes considerar migrar a TypeScript para:

- Mejor mantenibilidad
- Detección temprana de errores
- Documentación implícita con tipos

# ¡Listo para usar! 🎉

Contribuciones bienvenidas via Pull Requests.

# FrontEnd

# Sistema de Gestión de Precios Especiales

<div align="center">
  <img src="https://placehold.co/800x400?text=Dashboard+Preview" alt="Dashboard Preview">
  <p>🛠️ Plataforma para gestión de productos y precios especiales por cliente</p>
</div>

## 🚀 Características Principales
- **CRUD completo de productos**
- **Asignación de precios especiales** a clientes específicos
- Dashboard interactivo con 3 secciones:
  - 📦 Listado de productos
  - 📝 Formularios de creación
  - 💰 Gestión de precios especiales
- UI responsiva con **Tailwind CSS**
- Validaciones en tiempo real

## 📦 Dependencias Principales
```bash
"dependencies": {
  "react": "^18.2.0",
  "react-router-dom": "^6.14.1",
  "react-hot-toast": "^2.4.0",
  "tailwindcss": "^3.3.3",
  "lucide-react": "^0.263.1"
}
```

## ⚙️ Configuración Inicial

1. Clonar repositorio:
```bash
git clone https://github.com/danielc123avila/Desafio-Reac-MongoDb
cd gestion-precios
```

2. Instalar dependencias:
```bash
npm install
```

3. Variables de entorno (crear `.env`):
```env
VITE_API_URL=http://localhost:5000/api
```

4. Iniciar servidor de desarrollo:
```bash
npm run dev
```

## 🖥️ Estructura de Archivos
```
src/
├── components/       # Componentes reutilizables
├── context/          # Contexto de autenticación
├── pages/            # Vistas principales
├── types/            # Tipos TypeScript
├── api/              # Configuración API
└── App.tsx           # Enrutamiento principal
```

## 📋 Requisitos del Sistema
- Node.js v16+
- npm v9+
- Servidor backend ejecutándose en puerto 5000

## 🛠️ Scripts Disponibles
| Comando          | Descripción                     |
|------------------|---------------------------------|
| `npm run dev`    | Inicia servidor de desarrollo   |
| `npm run build`  | Genera build para producción    |
| `npm run lint`   | Ejecuta linter                  |
| `npm run preview`| Previsualiza build de producción|

## 📄 Licencia
MIT License © 2025 Daniel Colina